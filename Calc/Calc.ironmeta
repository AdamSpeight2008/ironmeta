
using System;
using System.Linq;

ironMeta Calc<char, int> : IronMeta.CharacterMatcher<int>
{
    Expression = Additive;
    
    Additive = Add | Sub | Multiplicative;
        
    DecimalDigit = .:c ?( c >= '0' && c <= '9' ) -> { return (int)c - '0'; };
    
    Add = BinaryOp(Additive, '+', Multiplicative) -> { return _IM_Result.Results.Aggregate((total, n) => total + n); };
    Sub = BinaryOp(Additive, '-', Multiplicative) -> { return _IM_Result.Results.Aggregate((total, n) => total - n); };

    Multiplicative = Multiply | Divide;
    Multiplicative = Number(DecimalDigit);
    
    Multiply = BinaryOp(Multiplicative, "*", Number, DecimalDigit) 
			-> { return _IM_Result.Results.Aggregate((p, n) => p * n); };
    Divide = BinaryOp(Multiplicative, "/", Number, DecimalDigit) 
			-> { return _IM_Result.Results.Aggregate((q, n) => q / n); };
        
    BinaryOp :first :op :second .?:type = first:a KW(op) second(type):b -> { return new List<int> { a, b }; };
    
    Number :type = Digits(type):n Whitespace* -> { return n; };
    
    Digits :type = Digits(type):a type:b -> { return a*10 + b; };
    Digits :type = type;
            
    KW .*:str = str Whitespace*;
    
    Zero = "ze" {new List<char>{ 'r', 'o' }};
}
