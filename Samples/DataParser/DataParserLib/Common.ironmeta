//
// Common Functionality for Data Parsers
//

using System.Xml;

ironMeta Common<char, XmlNode> : IronMeta.CharacterMatcher<XmlNode>
{
	
	NewXmlDocument = &. 
		-> { return new XmlDocument(); };
	
	NewXmlDocElement :parent .*:name = &.
		-> {
				XmlDocument doc = (XmlDocument)parent;
				XmlElement child = doc.CreateElement(_IM_GetText(name));
				doc.AppendChild(child);
				return child;
			};
	
	NewXmlElement :parent .*:name = &. 
		-> {
				XmlElement elem = (XmlElement)parent;
				XmlElement child = elem.OwnerDocument.CreateElement(_IM_GetText(name));
				elem.AppendChild(child);
				return child;
			};
	
	Header :name :att :rule :element = name WS ":" WS rule:d WS
		-> { ((XmlElement)element).SetAttribute(_IM_GetText(att), _IM_GetText(d)); };
	
	Token = (~Whitespace .)+; // Whitespace is inherited from CharacterMatcher
	Line = (~EOL .)+; // EOL is inherited from CharacterMatcher
	
	Date = Digit Digit? '/' Digit Digit? '/' Digit Digit (Digit Digit)?;		
	Time = Digit Digit? ":" Digit Digit? ":" Digit Digit? WS ("AM"|"PM")?;
	
	Number = Digit+ ("." Digit+)?;
	Digit = '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9';
	
	WS = Whitespace*; // Whitespace is inherited from CharacterMatcher
}
