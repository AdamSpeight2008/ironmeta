//
// MasterPlex QT Report
//

using System.Xml;

ironMeta MasterPlexQTReport<char, XmlNode> : Common.CommonMatcher
{
	
	Report = 
		NewXmlDocument:xmlDoc 
		WSL "MasterPlex QT Report By Analyte" WSL 
		Headers(xmlDoc):readout 
		Test(readout)+ 
		EOF
		-> { return xmlDoc; };
	
	Headers :xmlDoc = 
		NewXmlDocElement(xmlDoc, "readout"):readout 
		Header("Report Date", "reportDate", Date, readout)         
		Header("Run Date", "runDate", Date, readout)               
		Header("Report Time", "reportTime", Time, readout)         
		Header("Run Time", "runTime", Time, readout)               
		Header("Data File", "dataFile", Token, readout)
		Header("Hardware Serial No.", "serialNo", Token, readout)   
		Header("Plate Name", "plateName", Token, readout)           
		Header("Operator", "operator", Token, readout)              
		Header("MasterPlex QT Version", "version", Version, readout)  
		Header("Analyst", "analyst", Token, readout)                
		-> { return readout; };
	
	Version = Digit+ ("." Digit+)* WS Token;
	
	Test :readout = 
		NewXmlElement(readout, "test"):test 
		(AnalyteHeader(test) BackgroundHeader(test) | BackgroundHeader(test) AnalyteHeader(test))
		DataHeading 
		(Measurement(test) (PageBreak PageHeader?)?)+;
		
	AnalyteHeader :test = Header("Analyte Name", "name", Token, test);
	BackgroundHeader :test = Header("Background", "background", Token, test);
	
//	DataHeading = "Well" WS "Sample Name" WS "MFI" WS "Concentration" WS "Unit" WS "Count" WS;
	DataHeading = WSList("Well", "Sample Name", "MFI", "Concentration", "Unit", "Count") WS;

	Measurement :test = 
		Token:well WS SampleName:sampleName WS Token:mfi WS Token:concentration WS Token:unit WS Token:count WSL
		-> {
				//Console.WriteLine("Measurement {0}", _IM_GetText(well));
		
				XmlElement elem = (XmlElement)test;
				XmlElement row = elem.OwnerDocument.CreateElement("measurement");
				elem.AppendChild(row);
				
				row.SetAttribute("well", _IM_GetText(well));
				row.SetAttribute("sample-name", _IM_GetText(sampleName));
				row.SetAttribute("mfi", _IM_GetText(mfi));
				row.SetAttribute("concentration", _IM_GetText(concentration));
				row.SetAttribute("unit", _IM_GetText(unit));
				row.SetAttribute("count", _IM_GetText(count));
			};

	PageBreak = Token WS "Page" WS "-" WS Number WS "of" WS Number WS RestOfLine WSL;
	PageHeader = Date WS "Report By Analytes" WS Time WSL DataHeading;

	SampleName = Token ( WS "(" Number ")" )?;	
}
